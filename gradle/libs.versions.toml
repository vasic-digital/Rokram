# Yole - Kotlin Multiplatform Version Catalog
# Centralized dependency management for all platforms

[versions]
# Kotlin and Core
kotlin = "2.1.0"
agp = "8.7.3"
compose = "1.7.3"
compose-plugin = "1.7.3"

# Kotlinx Libraries
kotlinx-coroutines = "1.9.0"
kotlinx-serialization = "1.7.3"
kotlinx-datetime = "0.6.1"
kotlinx-io = "0.6.0"
kotlinx-atomicfu = "0.26.1"

# AndroidX Libraries
androidx-core = "1.15.0"
androidx-appcompat = "1.7.0"
androidx-activity = "1.9.3"
androidx-lifecycle = "2.8.7"
androidx-navigation = "2.8.4"
androidx-datastore = "1.1.1"
androidx-test-junit = "1.2.1"
androidx-test-espresso = "3.6.1"
androidx-multidex = "2.0.1"

# Material Design
material = "1.12.0"
material3 = "1.3.1"

# Format-Specific Libraries
flexmark = "0.64.8"
opencsv = "5.9"
commonmark = "0.23.0"

# Utilities
apache-commons-lang3 = "3.17.0"
commons-io = "2.18.0"
gson = "2.11.0"

# Ktor (for potential network operations)
ktor = "3.0.2"

# Testing
junit = "4.13.2"
junit5 = "5.11.3"
kotest = "5.9.1"
assertj = "3.26.3"
mockk = "1.13.13"
turbine = "1.2.0"
kover = "0.8.3"

# UI Libraries (Android)
gene-rate = "1.1.8"
app-intro = "6.3.1"
epub-parser = "1.0.95"
color-picker = "3.1.0"

# Build Tools
dokka = "2.0.0"
gradle-versions = "0.51.0"

[libraries]
# Kotlin Standard Library
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

# Kotlinx
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-io-core = { module = "org.jetbrains.kotlinx:kotlinx-io-core", version.ref = "kotlinx-io" }
kotlinx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "kotlinx-atomicfu" }

# Compose Multiplatform
compose-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "compose" }
compose-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "org.jetbrains.compose.material:material", version.ref = "compose" }
compose-material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "compose" }
compose-ui = { module = "org.jetbrains.compose.ui:ui", version.ref = "compose" }
compose-ui-util = { module = "org.jetbrains.compose.ui:ui-util", version.ref = "compose" }
compose-ui-tooling = { module = "org.jetbrains.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "org.jetbrains.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-ui-test = { module = "org.jetbrains.compose.ui:ui-test", version.ref = "compose" }

# AndroidX
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "androidx-datastore" }
androidx-multidex = { module = "androidx.multidex:multidex", version.ref = "androidx-multidex" }

# Material Design
material = { module = "com.google.android.material:material", version.ref = "material" }

# Format Libraries - Markdown
flexmark-core = { module = "com.vladsch.flexmark:flexmark", version.ref = "flexmark" }
flexmark-all = { module = "com.vladsch.flexmark:flexmark-all", version.ref = "flexmark" }
flexmark-util = { module = "com.vladsch.flexmark:flexmark-util", version.ref = "flexmark" }
flexmark-ext-emoji = { module = "com.vladsch.flexmark:flexmark-ext-emoji", version.ref = "flexmark" }
flexmark-ext-gfm-tasklist = { module = "com.vladsch.flexmark:flexmark-ext-gfm-tasklist", version.ref = "flexmark" }
flexmark-ext-superscript = { module = "com.vladsch.flexmark:flexmark-ext-superscript", version.ref = "flexmark" }
flexmark-ext-autolink = { module = "com.vladsch.flexmark:flexmark-ext-autolink", version.ref = "flexmark" }
flexmark-ext-toc = { module = "com.vladsch.flexmark:flexmark-ext-toc", version.ref = "flexmark" }
flexmark-ext-tables = { module = "com.vladsch.flexmark:flexmark-ext-tables", version.ref = "flexmark" }
flexmark-ext-jekyll = { module = "com.vladsch.flexmark:flexmark-ext-jekyll-front-matter", version.ref = "flexmark" }
flexmark-ext-anchorlink = { module = "com.vladsch.flexmark:flexmark-ext-anchorlink", version.ref = "flexmark" }
flexmark-ext-strikethrough = { module = "com.vladsch.flexmark:flexmark-ext-gfm-strikethrough", version.ref = "flexmark" }
flexmark-ext-footnotes = { module = "com.vladsch.flexmark:flexmark-ext-footnotes", version.ref = "flexmark" }
flexmark-ext-gitlab = { module = "com.vladsch.flexmark:flexmark-ext-gitlab", version.ref = "flexmark" }
flexmark-ext-typographic = { module = "com.vladsch.flexmark:flexmark-ext-typographic", version.ref = "flexmark" }
flexmark-ext-admonition = { module = "com.vladsch.flexmark:flexmark-ext-admonition", version.ref = "flexmark" }
flexmark-ext-ins = { module = "com.vladsch.flexmark:flexmark-ext-ins", version.ref = "flexmark" }
flexmark-ext-wikilink = { module = "com.vladsch.flexmark:flexmark-ext-wikilink", version.ref = "flexmark" }
flexmark-ext-yaml = { module = "com.vladsch.flexmark:flexmark-ext-yaml-front-matter", version.ref = "flexmark" }

# CommonMark (alternative Markdown parser for non-JVM platforms)
commonmark-core = { module = "org.commonmark:commonmark", version.ref = "commonmark" }
commonmark-ext-gfm-tables = { module = "org.commonmark:commonmark-ext-gfm-tables", version.ref = "commonmark" }
commonmark-ext-gfm-strikethrough = { module = "org.commonmark:commonmark-ext-gfm-strikethrough", version.ref = "commonmark" }

# Format Libraries - CSV
opencsv = { module = "com.opencsv:opencsv", version.ref = "opencsv" }

# Utilities
apache-commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "apache-commons-lang3" }
commons-io = { module = "commons-io:commons-io", version.ref = "commons-io" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

# Ktor (for potential network operations)
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }

# UI Libraries (Android)
gene-rate = { module = "com.github.Pixplicity:gene-rate", version.ref = "gene-rate" }
app-intro = { module = "com.github.AppIntro:AppIntro", version.ref = "app-intro" }
epub-parser = { module = "com.github.mertakdut:EpubParser", version.ref = "epub-parser" }
color-picker = { module = "com.github.martin-stone:hsv-alpha-color-picker-android", version.ref = "color-picker" }

# Testing
junit = { module = "junit:junit", version.ref = "junit" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit5" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit5" }
kotest-framework-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

# AndroidX Testing
androidx-test-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-junit" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-test-espresso" }
androidx-test-compose-ui = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "material3" }

[bundles]
# Kotlinx bundle for common use
kotlinx = [
    "kotlinx-coroutines-core",
    "kotlinx-serialization-json",
    "kotlinx-datetime",
    "kotlinx-io-core",
]

# Compose bundle for UI
compose = [
    "compose-runtime",
    "compose-foundation",
    "compose-material3",
    "compose-ui",
    "compose-ui-util",
]

# AndroidX bundle
androidx = [
    "androidx-core-ktx",
    "androidx-appcompat",
    "androidx-lifecycle-runtime",
    "androidx-lifecycle-viewmodel",
]

# Flexmark bundle for Markdown
flexmark = [
    "flexmark-core",
    "flexmark-util",
    "flexmark-ext-emoji",
    "flexmark-ext-gfm-tasklist",
    "flexmark-ext-superscript",
    "flexmark-ext-autolink",
    "flexmark-ext-toc",
    "flexmark-ext-tables",
    "flexmark-ext-jekyll",
    "flexmark-ext-anchorlink",
    "flexmark-ext-strikethrough",
    "flexmark-ext-footnotes",
    "flexmark-ext-gitlab",
    "flexmark-ext-typographic",
    "flexmark-ext-admonition",
    "flexmark-ext-ins",
    "flexmark-ext-wikilink",
    "flexmark-ext-yaml",
]

# Testing bundle
testing = [
    "kotlin-test",
    "kotest-framework-engine",
    "kotest-assertions-core",
    "kotest-property",
    "mockk",
    "turbine",
]

# Android Testing bundle
android-testing = [
    "androidx-test-junit",
    "androidx-test-espresso-core",
    "mockk-android",
]

[plugins]
# Kotlin Plugins
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

# Compose
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

# Android
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }

# Documentation and Code Quality
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }

# Build Tools
gradle-versions = { id = "com.github.ben-manes.versions", version.ref = "gradle-versions" }
