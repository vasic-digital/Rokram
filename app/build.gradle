/*#######################################################
 *
 *   Maintained 2017-2025 by Gregor Santner <gsantner AT mailbox DOT org>
 *
 *   License of this file: Apache 2.0
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
#########################################################*/
apply plugin: 'com.android.application'
if (enable_plugin_kotlin) {
    apply plugin: 'kotlin-android'
    // apply plugin: 'kotlin-android-extensions'  // Deprecated - use View Binding instead
    apply plugin: 'kotlin-kapt'
}

rootProject.ext.version_minSdk = 18

// https://github.com/vsch/flexmark-java/releases
ext.version_library_flexmark = "0.42.14"

android {
    buildToolsVersion rootProject.ext.version_buildTools
    compileSdkVersion rootProject.ext.version_compileSdk

    defaultConfig {
        resValue "string", "manifest_package_id", "digital.vasic.yole"
        applicationId "digital.vasic.yole"
        versionName "2.15.1"
        versionCode 160

        multiDexEnabled true
        minSdkVersion rootProject.ext.version_minSdk
        targetSdkVersion rootProject.ext.version_compileSdk
        buildConfigField "boolean", "IS_TEST_BUILD", "false"
        buildConfigField "boolean", "IS_GPLAY_BUILD", "false"
        buildConfigField "String[]", "DETECTED_ANDROID_LOCALES", "${findUsedAndroidLocales()}"
        buildConfigField "String", "BUILD_DATE", "\"${getBuildDate()}\""
        buildConfigField "String", "GITHASH", "\"${getGitHash}\""
        buildConfigField "String", "GITMSG", "\"${getGitLastCommitMessage}\""
        setProperty("archivesBaseName", applicationId + "-v" + versionCode + "-" + versionName)
    }

    flavorDimensions "default"
    productFlavors {
        flavorAtest {
            applicationId "digital.vasic.yole_test"
            versionCode = Integer.parseInt(new Date().format('yyMMdd'))
            versionName = defaultConfig.versionName + "-" + new Date().format('HHmm')
            buildConfigField "boolean", "IS_TEST_BUILD", "true"
        }
        flavorDefault {
        }
        flavorGplay {
            buildConfigField "boolean", "IS_GPLAY_BUILD", "true"
        }
    }

    sourceSets {
        main { assets.srcDirs = ['src/main/assets'] }
        if (enable_plugin_kotlin) {
            main.java.srcDirs += 'src/main/kotlin'
        }
        main.java.srcDirs += 'thirdparty/java'
        main.res.srcDirs += 'thirdparty/res'
        main.assets.srcDirs += 'thirdparty/assets'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/LICENSE-LGPL-2.1.txt', 'META-INF/LICENSE-LGPL-3.txt', 'META-INF/LICENSE-W3C-TEST']
        }
    }


    compileOptions {
        encoding = 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    namespace 'digital.vasic.yole'
    lint {
        abortOnError false
        disable 'MissingTranslation', 'InvalidPackage', 'ObsoleteLintCustomCheck', 'DefaultLocale', 'UnusedAttribute', 'VectorRaster', 'InflateParams', 'IconLocation', 'UnusedResources', 'TypographyEllipsis'
    }

}

dependencies {
    implementation project(':commons')
    implementation project(':core')
    // Temporarily disabled format modules
    // implementation project(':format-markdown')
    // implementation project(':format-todotxt')
    // implementation project(':format-csv')
    // implementation project(':format-wikitext')
    // implementation project(':format-keyvalue')
    // implementation project(':format-asciidoc')
    // implementation project(':format-orgmode')
    // implementation project(':format-plaintext')
    // implementation project(':format-latex')
    // implementation project(':format-restructuredtext')
    // implementation project(':format-taskpaper')
    // implementation project(':format-textile')
    // implementation project(':format-creole')
    // implementation project(':format-tiddlywiki')
    // implementation project(':format-jupyter')
    // implementation project(':format-rmarkdown')

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.assertj:assertj-core:3.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Android standard libs
    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'androidx.browser:browser:1.4.0'

    // UI libs
    implementation 'com.github.Pixplicity:gene-rate:v1.1.8'
    implementation 'com.github.AppIntro:AppIntro:6.2.0'
    implementation 'com.github.mertakdut:EpubParser:1.0.95'
    implementation 'com.github.martin-stone:hsv-alpha-color-picker-android:3.1.0'

    // Markdown convertor (Flexmark)
    implementation "com.vladsch.flexmark:flexmark:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-util:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-emoji:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-gfm-tasklist:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-superscript:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-autolink:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-toc:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-tables:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-jekyll-front-matter:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-jekyll-tag:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-anchorlink:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-gfm-strikethrough:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-footnotes:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-gitlab:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-typographic:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-admonition:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-ins:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-wikilink:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-yaml-front-matter:${version_library_flexmark}"

    // CSV processing
    implementation 'com.opencsv:opencsv:5.7.1'

    // Utilities
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'com.google.code.gson:gson:2.10.1'

    // Processors
    def anpros = []
    for (anpro in anpros) {
        if (enable_plugin_kotlin) {
            kapt anpro
        } else {
            annotationProcessor anpro
        }
    }
}
